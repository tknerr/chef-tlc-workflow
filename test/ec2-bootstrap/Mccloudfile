Mccloud::Config.run do |config|

  # identity / namespace
  config.mccloud.prefix="mccloud"
  config.mccloud.environment="tlc"
  config.mccloud.identity=ENV['USERNAME']

  # define AWS cloud provider for EU-West region
  config.provider.define "aws-eu-west" do |provider_config|
    provider_config.provider.flavor = :aws
    provider_config.provider.options = { }
    provider_config.provider.region = "eu-west-1"
    provider_config.provider.check_keypairs = true
    provider_config.provider.check_security_groups = true
    provider_config.provider.namespace = "mccloud-tlc-#{ENV['USERNAME']}"
  end

  # ***********************************************
  # VM Definitions
  # ***********************************************
  
  config.vm.define "sample-app" do |config|

    # official Ubuntu 12.04 AMI
    config.vm.ami = "ami-524e4726"
    config.vm.provider= "aws-eu-west"
    config.vm.flavor = "m1.small"
    config.vm.zone = "eu-west-1c"
    config.vm.user = "ubuntu"

    # NOTE: the security groups must exist (e.g. create it beforehand via AWS console)
    config.vm.security_groups = [ "mccloud", "http" ]
    
    # see http://fog.io/1.1.2/rdoc/Fog/Compute/AWS/Servers.html
    # and https://github.com/fog/fog/blob/v1.1.2/lib/fog/aws/requests/compute/run_instances.rb
    config.vm.create_options = {
      :user_data => "chef_version=10.18.2-1,fqdn=sample-app.example.com"
    }

    # NOTE: the keypair (for logging in to the VM) must exist (e.g. create it beforehand via AWS console)
    config.vm.key_name = "mccloud-key-tlc"
    config.vm.private_key_path = "#{ENV['HOME']}/.ssh/mccloud_rsa"
    config.vm.public_key_path = "#{ENV['HOME']}/.ssh/mccloud_rsa.pub"
  
    # bootstrap template (runs at first-boot only)
    config.vm.bootstrap = ".chef/bootstrap/omnibus-chef.sh"

    # provisioning sript (runs on each mccloud up or provision)
    config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = [ "cookbooks/sample-app-0.1.0" ]
      chef.log_level = "info"
      chef.add_recipe "sample-app"
      chef.json.merge!({
        :sample_app => {
          :words_of_wisdom => "YEAH! I did it for the Lulz!"
        }
      })
    end
  end
end